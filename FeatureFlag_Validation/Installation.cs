///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace FeatureFlag_Validation
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Installation recording.
    /// </summary>
    [TestModule("66353e3a-79dd-45ec-82ff-c43ad090de89", ModuleType.Recording, 1)]
    public partial class Installation : ITestModule
    {
        /// <summary>
        /// Holds an instance of the FeatureFlag_ValidationRepository repository.
        /// </summary>
        public static FeatureFlag_ValidationRepository repo = FeatureFlag_ValidationRepository.Instance;

        static Installation instance = new Installation();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Installation()
        {
            FSWBrand = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Installation Instance
        {
            get { return instance; }
        }

#region Variables

        string _FSWBrand;

        /// <summary>
        /// Gets or sets the value of variable FSWBrand.
        /// </summary>
        [TestVariable("a5a21829-b15c-4325-aec5-aefdb5540c85")]
        public string FSWBrand
        {
            get { return _FSWBrand; }
            set { _FSWBrand = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable TxtMkt.
        /// </summary>
        [TestVariable("c2633c9b-748d-475a-84ec-2287c97232cb")]
        public string TxtMkt
        {
            get { return repo.TxtMkt; }
            set { repo.TxtMkt = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(0));
            Delay.Duration(10000, false);
            
            UserCodeCollection1.Install_FSW(FSWBrand);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SmartFit15InstallShieldWizard.ButtonOK' at Center.", repo.SmartFit15InstallShieldWizard.ButtonOKInfo, new RecordItemIndex(2));
            repo.SmartFit15InstallShieldWizard.ButtonOK.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(3));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ReSoundSmartFit15InstallShieldWi.ButtonNext' at Center.", repo.ReSoundSmartFit15InstallShieldWi.ButtonNextInfo, new RecordItemIndex(4));
            repo.ReSoundSmartFit15InstallShieldWi.ButtonNext.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(5));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ReSoundSmartFit15InstallShieldWi.ButtonNext' at Center.", repo.ReSoundSmartFit15InstallShieldWi.ButtonNextInfo, new RecordItemIndex(6));
            repo.ReSoundSmartFit15InstallShieldWi.ButtonNext.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(7));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ReSoundSmartFit15InstallShieldWi.ButtonNext' at Center.", repo.ReSoundSmartFit15InstallShieldWi.ButtonNextInfo, new RecordItemIndex(8));
            repo.ReSoundSmartFit15InstallShieldWi.ButtonNext.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(9));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ReSoundSmartFit15InstallShieldWi.IAcceptTheTermsInTheLicenseAgreem' at Center.", repo.ReSoundSmartFit15InstallShieldWi.IAcceptTheTermsInTheLicenseAgreemInfo, new RecordItemIndex(10));
            repo.ReSoundSmartFit15InstallShieldWi.IAcceptTheTermsInTheLicenseAgreem.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ReSoundSmartFit15InstallShieldWi.ButtonNext' at Center.", repo.ReSoundSmartFit15InstallShieldWi.ButtonNextInfo, new RecordItemIndex(11));
            repo.ReSoundSmartFit15InstallShieldWi.ButtonNext.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(12));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ReSoundSmartFit15InstallShieldWi.CheckBoxStandalone' at Center.", repo.ReSoundSmartFit15InstallShieldWi.CheckBoxStandaloneInfo, new RecordItemIndex(13));
            repo.ReSoundSmartFit15InstallShieldWi.CheckBoxStandalone.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ResoundSmartFitProgramsAndFeature.ComboBox17451' at Center.", repo.ResoundSmartFitProgramsAndFeature.ComboBox17451Info, new RecordItemIndex(14));
            repo.ResoundSmartFitProgramsAndFeature.ComboBox17451.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse scroll Vertical by 600 units.", new RecordItemIndex(15));
            Mouse.ScrollWheel(600);
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'List1000.Australia' at Center.", repo.List1000.AustraliaInfo, new RecordItemIndex(16));
            repo.List1000.Australia.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(17));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ReSoundSmartFit15InstallShieldWi.ButtonNext' at Center.", repo.ReSoundSmartFit15InstallShieldWi.ButtonNextInfo, new RecordItemIndex(18));
            repo.ReSoundSmartFit15InstallShieldWi.ButtonNext.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(19));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ReSoundSmartFit15InstallShieldWi.ButtonNext' at Center.", repo.ReSoundSmartFit15InstallShieldWi.ButtonNextInfo, new RecordItemIndex(20));
            repo.ReSoundSmartFit15InstallShieldWi.ButtonNext.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(21));
            Delay.Duration(3000, false);
            
            UserCodeCollection1.ExtraNext_Button();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ReSoundSmartFit15InstallShieldWi.ButtonInstall' at Center.", repo.ReSoundSmartFit15InstallShieldWi.ButtonInstallInfo, new RecordItemIndex(23));
            repo.ReSoundSmartFit15InstallShieldWi.ButtonInstall.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s for the attribute 'Visible' to equal the specified value 'True'. Associated repository item: 'ReSoundSmartFit15InstallShieldWi.ButtonFinish'", repo.ReSoundSmartFit15InstallShieldWi.ButtonFinishInfo, new RecordItemIndex(24));
            repo.ReSoundSmartFit15InstallShieldWi.ButtonFinishInfo.WaitForAttributeEqual(5000, "Visible", "True");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ReSoundSmartFit15InstallShieldWi.ButtonFinish'.", repo.ReSoundSmartFit15InstallShieldWi.ButtonFinishInfo, new RecordItemIndex(25));
            Validate.Exists(repo.ReSoundSmartFit15InstallShieldWi.ButtonFinishInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ReSoundSmartFit15InstallShieldWi.ButtonFinish' at Center.", repo.ReSoundSmartFit15InstallShieldWi.ButtonFinishInfo, new RecordItemIndex(26));
            repo.ReSoundSmartFit15InstallShieldWi.ButtonFinish.Click();
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
