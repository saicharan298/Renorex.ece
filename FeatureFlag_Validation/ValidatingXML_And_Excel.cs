///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace FeatureFlag_Validation
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ValidatingXML_And_Excel recording.
    /// </summary>
    [TestModule("b76f5cfd-4e45-47a8-aba3-5b4fdc68993f", ModuleType.Recording, 1)]
    public partial class ValidatingXML_And_Excel : ITestModule
    {
        /// <summary>
        /// Holds an instance of the FeatureFlag_ValidationRepository repository.
        /// </summary>
        public static FeatureFlag_ValidationRepository repo = FeatureFlag_ValidationRepository.Instance;

        static ValidatingXML_And_Excel instance = new ValidatingXML_And_Excel();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ValidatingXML_And_Excel()
        {
            XMl_FlagKey_Buildname = "";
            XML_flagKey_Marketname = "";
            XML_FeatureFlag_Values_Buildname = "";
            TxtKey = "";
            Excel_FlagKeyMethod_Buildname = "";
            TxtValue = "";
            Excel_Brand_Buildname = "";
            TxtMarket = "";
            DeleteFilesBuildname = "";
            UninstallBuildname = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ValidatingXML_And_Excel Instance
        {
            get { return instance; }
        }

#region Variables

        string _XMl_FlagKey_Buildname;

        /// <summary>
        /// Gets or sets the value of variable XMl_FlagKey_Buildname.
        /// </summary>
        [TestVariable("75ae78d8-1b86-4dd0-a84d-a9682d73a759")]
        public string XMl_FlagKey_Buildname
        {
            get { return _XMl_FlagKey_Buildname; }
            set { _XMl_FlagKey_Buildname = value; }
        }

        string _XML_flagKey_Marketname;

        /// <summary>
        /// Gets or sets the value of variable XML_flagKey_Marketname.
        /// </summary>
        [TestVariable("9fcf31ce-32a7-40a8-bb8c-19e520560732")]
        public string XML_flagKey_Marketname
        {
            get { return _XML_flagKey_Marketname; }
            set { _XML_flagKey_Marketname = value; }
        }

        string _XML_FeatureFlag_Values_Buildname;

        /// <summary>
        /// Gets or sets the value of variable XML_FeatureFlag_Values_Buildname.
        /// </summary>
        [TestVariable("7ec5cdd4-2d37-4a23-b66c-7ef301a7af96")]
        public string XML_FeatureFlag_Values_Buildname
        {
            get { return _XML_FeatureFlag_Values_Buildname; }
            set { _XML_FeatureFlag_Values_Buildname = value; }
        }

        string _TxtKey;

        /// <summary>
        /// Gets or sets the value of variable TxtKey.
        /// </summary>
        [TestVariable("af07c0e0-8221-4017-8733-65caaff96411")]
        public string TxtKey
        {
            get { return _TxtKey; }
            set { _TxtKey = value; }
        }

        string _Excel_FlagKeyMethod_Buildname;

        /// <summary>
        /// Gets or sets the value of variable Excel_FlagKeyMethod_Buildname.
        /// </summary>
        [TestVariable("6be5b3d3-b603-46a1-b095-f26f60a3beea")]
        public string Excel_FlagKeyMethod_Buildname
        {
            get { return _Excel_FlagKeyMethod_Buildname; }
            set { _Excel_FlagKeyMethod_Buildname = value; }
        }

        string _TxtValue;

        /// <summary>
        /// Gets or sets the value of variable TxtValue.
        /// </summary>
        [TestVariable("961e50e9-2ab3-4735-bfda-7c07e22837f7")]
        public string TxtValue
        {
            get { return _TxtValue; }
            set { _TxtValue = value; }
        }

        string _Excel_Brand_Buildname;

        /// <summary>
        /// Gets or sets the value of variable Excel_Brand_Buildname.
        /// </summary>
        [TestVariable("3f9d29bd-3259-489d-b963-d61067488002")]
        public string Excel_Brand_Buildname
        {
            get { return _Excel_Brand_Buildname; }
            set { _Excel_Brand_Buildname = value; }
        }

        string _TxtMarket;

        /// <summary>
        /// Gets or sets the value of variable TxtMarket.
        /// </summary>
        [TestVariable("9a4b6cf8-120e-4cda-ab9b-8ac6b3908c60")]
        public string TxtMarket
        {
            get { return _TxtMarket; }
            set { _TxtMarket = value; }
        }

        string _DeleteFilesBuildname;

        /// <summary>
        /// Gets or sets the value of variable DeleteFilesBuildname.
        /// </summary>
        [TestVariable("befa5ccb-b5b5-480c-b5f7-34d7defdc182")]
        public string DeleteFilesBuildname
        {
            get { return _DeleteFilesBuildname; }
            set { _DeleteFilesBuildname = value; }
        }

        string _UninstallBuildname;

        /// <summary>
        /// Gets or sets the value of variable UninstallBuildname.
        /// </summary>
        [TestVariable("deebd45b-4501-4327-a2d2-c467d007173a")]
        public string UninstallBuildname
        {
            get { return _UninstallBuildname; }
            set { _UninstallBuildname = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollection1.Excel_FlagKeyMethod2(TxtMarket, Excel_Brand_Buildname);
            Delay.Milliseconds(0);
            
            UserCodeCollection1.XMl_FlagKey_Method2(TxtMarket, Excel_Brand_Buildname);
            Delay.Milliseconds(0);
            
            UserCodeCollection1.Uninstall(UninstallBuildname);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(3));
            Delay.Duration(10000, false);
            
            UserCodeCollection1.DeleteFiles(DeleteFilesBuildname);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(5));
            Delay.Duration(10000, false);
            
            UserCodeCollection1.Uninstall(UninstallBuildname);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(7));
            Delay.Duration(10000, false);
            
            UserCodeCollection1.Uninstall(UninstallBuildname);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 6s.", new RecordItemIndex(9));
            Delay.Duration(6000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
