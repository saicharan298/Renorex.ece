<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true"
      throwExceptions="false"
      internalLogLevel="Off">
  <extensions>
    <add assembly="ReSound.Fuse2.Logging" />
  </extensions>
  <variable name="brand" value="RS" />
  <targets>
    <target xsi:type="FilteringWrapper" name="athena" condition="HasAthena()">
      <target xsi:type="NLogViewer" name="viewer"  address="udp://127.0.0.1:9999"/>
    </target>
    <target xsi:type="FilteringWrapper" name="filesystem" condition="not HasAthena()">
      <target name="file" xsi:type="File" layout="${date:format=HH\:mm\:ss}  |  ${level}  |  ${message}" fileName="${specialfolder:folder=LocalApplicationData}/Temp/FSW_${var:brand}.log" keepFileOpen="true" concurrentWrites="false" DeleteOldFileOnStartup="true" cleanupFileName="false"/>
    </target>
    <target xsi:type="FilteringWrapper" name="SideBySideMigration" condition="IsSideBySideMigration()">
      <target name="file" xsi:type="File" layout="${date:format=yyyy-MM-dd},${date:format=HH\:mm\:ss},${message}" fileName="${var:MigrationLogFile}" keepFileOpen="true" concurrentWrites="false" DeleteOldFileOnStartup="true" cleanupFileName="false"/>
    </target>
    <target xsi:type="File" name="Teleaudiology" layout="${date:format=HH\:mm\:ss\.fff},${message}" fileName="${specialfolder:folder=LocalApplicationData}/Temp/FSW_${var:brand}_TeleAudiology.log" DeleteOldFileOnStartup="true" />
  </targets>
  <rules>
    <logger name="*" minlevel="Debug" writeTo="athena">
      <filters>
        <!--MSM: Do NOT delete these filters unless you need debug info from Ratatosk/Nibelung-->
        <when condition="(contains('${logger}','Nibelung'))" action="Ignore" />
        <when condition="(contains('${logger}','Ratatosk.Communication'))" action="Ignore" />
        <when condition="(contains('${logger}','Ratatosk.Ble'))" action="Ignore" />
        <!-- DEFECT 976095: Suppressing detection error for legacy device. Comment following line if you need to debug FittingSession.Detect in DeviceDetect -->
        <when condition="(contains('${message}','E Detect error'))" action="Ignore" />
        <when condition="IsSideBySideMigration()" action="Ignore" />
      </filters>
    </logger>
    <logger name="*" minlevel="Info" writeTo="filesystem">
      <filters>
        <!--MSM: Do NOT delete these filters unless you need debug info from Ratatosk/Nibelung-->
        <when condition="(contains('${logger}','Nibelung'))" action="Ignore" />
        <when condition="(contains('${logger}','Ratatosk.Communication'))" action="Ignore" />
        <when condition="(contains('${logger}','Ratatosk.Ble'))" action="Ignore" />
        <!-- DEFECT 976095: Suppressing detection error for legacy device. Comment following line if you need to debug FittingSession.Detect in DeviceDetect -->
        <when condition="(contains('${message}','E Detect error'))" action="Ignore" />
        <when condition="IsSideBySideMigration()" action="Ignore" />
      </filters>
    </logger>
    <logger name="*" minlevel="Debug" writeTo="SideBySideMigration">
      <filters>
        <!--MSM: Do NOT delete these filters unless you need debug info from Ratatosk/Nibelung-->
        <when condition="(contains('${logger}','Nibelung'))" action="Ignore" />
        <when condition="(contains('${logger}','Ratatosk.Communication'))" action="Ignore" />
        <when condition="(contains('${logger}','Ratatosk.Ble'))" action="Ignore" />
      </filters>
    </logger>
    <logger name="*" minlevel="Debug" writeTo="TeleAudiology">
      <filters>
        <when condition="not (contains('${message}','TA Sending') or contains('${message}','TA Receiving') or contains('${message}','TA Measuring'))" action="Ignore" />
      </filters>
    </logger>
  </rules>
</nlog>
